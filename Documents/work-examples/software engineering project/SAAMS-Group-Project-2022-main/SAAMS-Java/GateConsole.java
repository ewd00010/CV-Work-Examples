
// Generated by Together


import javax.swing.*;
import java.awt.event.ActionEvent;
import java.util.Observable;
import java.util.Observer;

/**
 * An interface to SAAMS:
 * Gate Control Console:
 * Inputs events from gate staff, and displays aircraft and gate information.
 * This class is a controller for the GateInfoDatabase and the AircraftManagementDatabase: sends messages when aircraft dock, have finished disembarking, and are fully embarked and ready to depart.
 * This class also registers as an observer of the GateInfoDatabase and the
 * AircraftManagementDatabase, and is notified whenever any change occurs in those <<model>> elements.
 * See written documentation.
 * @stereotype boundary/view/controller
 * @url element://model:project::SAAMS/design:view:::id1un8dcko4qme4cko4sw27
 * @url element://model:project::SAAMS/design:view:::id1jkohcko4qme4cko4svww
 * @url element://model:project::SAAMS/design:node:::id1un8dcko4qme4cko4sw27.node61
 */
public class GateConsole extends JFrame implements Observer {
/**
  *  The GateConsole interface has access to the GateInfoDatabase.
  * @supplierCardinality 1
  * @clientCardinality 0..*
  * @label accesses/observes
  * @directed*/
  GateInfoDatabase GIDatabase;

/**
  *  The GateConsole interface has access to the AircraftManagementDatabase.
  * @supplierCardinality 1
  * @clientCardinality 0..*
  * @directed
  * @label accesses/observes*/
  private AircraftManagementDatabase AMDatabase;;

/**
 * This gate's gateNumber
 * - for identifying this gate's information in the GateInfoDatabase.
 */
  private int gateNumber;

  /**
   * sets lmkUnnamed and lmkUnnamed1 to the instances of GateInfoDatabase and AircraftManagementDatabase and assigns
   * Observers to both.
   * @param GIDatabase Model
   * @param AMDatabase Model
   */
  public GateConsole(GateInfoDatabase GIDatabase, AircraftManagementDatabase AMDatabase, int gateNumber) {

    this.gateNumber = gateNumber;
    this.GIDatabase = GIDatabase;
    this.AMDatabase = AMDatabase;

    GIDatabase.addObserver(this);
    AMDatabase.addObserver(this);
  }


  public void update(Observable o, Object gateNumber) {
  }

  public void actionPerformed(ActionEvent e) {
    if("has Arrived at gate".equals(e.getActionCommand())) {
      GIDatabase.docked(gateNumber);
    }
  }
}
